body {
	margin: none;
	font-family: sans-serif;
	transition: background 1s ease-in-out;
	transition: background 1s ease-in;
	transition: background 1s ease-out;
	transition: background 1s ease;
	transition: background 1s linear;

}
.wrapper {
    position: relative;
	margin: auto;
	max-width: 50vw;
	height: 100vh;
}
.hidden {
	opacity: 0;
}

.visible {
	opacity: 1;
}

#currentData h1, #currenttData h2, #cNation, #cCapital, #cPop, #cLang li {
	/*position:absolute;*/
	opacity: inherit;
	transition: opacity .5s linear;
}

#nextData h1,#nextData h2, #nNation, #nCapital, #nPop, #nLang li {
	/*position:absolute;*/
	opacity: inherit;
	transition: opacity .5s linear;
}


/*The above transition for the text, doesn't work because when the DOM changes are made and a new nation data loaded, it is a brand new element. The old nation data is discarded, so there is really nothing to transition from.

From my understanding the solution would be to rig up some way of having two elements on screen, but one be hidden via opacity etc. So then, getrandomNation() loads two elements to the DOM and we have another function to switch their opacity i.e

	Data X | opacity 0.0
	Data Z | opacity 1

	switchDataOpacity() // switches the opacity of Data X and Data Z elements.

	Data X | opacity 1
	Data Z | opacity 0.0


	getNewNation() // Replaces Data Z with a new set, Data W, so now we have

	Data X | opacity 1
	Data W | opacity 0.0 // and then call switchDataOpacity()

	etc.. */
